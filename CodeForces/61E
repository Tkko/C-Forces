//Used Fenwick tree
#include<bits/stdc++.h>
#define LL long long
#define N 1000001
using namespace std;

void add(int i, int (&t)[N]){
	while(i < N){
		t[i]++;
		i += i & -i;
	}
}

LL sumTo(int i, int (&t)[N]){
	LL s = 0;
	while(i > 0){
		s += t[i];
		i -= i & -i;
	}
	return s;
}

int main() {
	int n, lrt[N] = {}, rlt[N] = {};
	scanf("%d", &n);
	pair<int, int> p[n];
	int a[n];
	LL m = 0;
	for(int i = 0; i < n; ++i){
		scanf("%d", &p[i].first);
		p[i].second = i;
	}
	sort(p, p + n);
	for(int i = 0; i < n; ++i){
		p[i].first = p[i].second + 1;
		p[i].second = n - p[i].first;
	}

	for(int i = 0; i < n; ++i){
		int _p = p[i].first;
		add(_p, lrt);
		a[i] = i - sumTo(--_p, lrt);
	}

	for(int i = n - 1; i >= 0; --i) {
		int _p = p[i].first;
		add(_p, rlt);
		m += sumTo(--_p, rlt) * a[i];
	}
	printf("%lld", m);
}
